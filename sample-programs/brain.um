# Sample Program: brain.um

fnc inc() {
  if memory[ptr] == 255 {
    memory[ptr] = 0;
    return;
  }

  memory[ptr] += 1;
}

fnc dec() {
  if memory[ptr] == 0 {
    memory[ptr] = 255;
    return;
  }

  memory[ptr] -= 1;
}

fnc right() {
  if ptr == 30000 {
    ptr = 0;
    return;
  }

  ptr += 1;
}

fnc left() {
  if ptr == 0 {
    ptr = 30000;
    return;
  }

  ptr -= 1;
}

fnc write_char() {
  let byte = memory[ptr];
  let c = chr(byte);
  print(c);
}



var memory = [];
let mem_size = 100;
var i = mem_size;

loop {
  i -= 1;
  if i < 0 {
    break;
  }
  memory[i] = 0;
}

var depth = 0;
var ptr = 0;

var pc = 0;


let hello = "++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.";
print("Made it to ln 66");
print(hello);
print(len(hello));
fnc brain(code: String) {
  print("Made it here");
  print(code);
  let count = len(code);

  loop {
    let c = code[pc];
    print(c);
    pc += 1;

    if c == "+" {
      inc();
    } else if c == "-" {
      dec();
    } else if c == ">" {
      right();
    } else if c == "<" {
      left();
    } else if c == "." {
      write_char();
    } else if c == "," {
      # TODO 
    } else if c == "[" {
      if memory[ptr] != 0 {
        continue;
      }

      let start_depth = depth;
      loop {
        if pc >= count {
          print("ran out of instructions");
          break;
        }

        if code[pc] == "[" {
          depth += 1;
        }
        if code[pc] == "]" {
          depth -= 1;
          if depth == start_depth {
            break;
          }
        }

        pc += 1;
      }
    } else if c == "]" {
      if memory[ptr] == 0 {
        continue;
      }

      let start_depth = depth;
      loop {
        pc -= 1;
        if pc < 0 {
          print("ran out of instructions");
          break;
        }

        if code[pc] == "]" {
          depth += 1;
        }
        if code[pc] == "[" {
          depth -= 1;
          if depth == start_depth {
            pc += 1;
            break;
          }
        }
      }
    }
  }

  print("Finished");
}

print("hello?");
print("hello?");
brain("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.");
print(memory);
print("Hello?");